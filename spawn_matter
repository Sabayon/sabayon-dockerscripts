#!/bin/bash

# Running default
SABAYON_HOME="${SABAYON_HOME:-/sabayon/arm/}"
SABAYON_DOCKER_IMAGE="${SABAYON_DOCKER_IMAGE:-sabayon/entropy-armhfp}"
SABAYON_CPUS="${SABAYON_CPUS:-5-7}"
SABAYON_MEMORY_RESERVATION="${SABAYON_MEMORY_RESERVATION:-300M}"
SABAYON_MEMORY_SWAP="${SABAYON_MEMORY_SWAP:-710M}"
SABAYON_MEMORY="${SABAYON_MEMORY:-710M}"
SABAYON_COMMAND="${SABAYON_COMMAND:-/matterscript.sh}"

matterscript=$(mktemp)
cat >$matterscript <<EOF
#!/bin/bash
set -e


pushd /etc/portage
git stash
git pull
popd

pushd /particles
git stash
git pull
popd

particles=\$(find "/particles/weekly" -name "*.particle" | sort)

emerge-webrsync
eix-sync

/usr/sbin/matter --sync-best-effort  \${particles}
EOF
chmod +x $matterscript

# deletes the temp directory
function cleanup {
  rm -rf "$matterscript"
}
trap cleanup EXIT


SABAYON_DOCKER_OPTIONS=(
  "-v $SABAYON_HOME/certs/:/root/.ssh/"
        "-v $matterscript:/matterscript.sh"
	"-v $SABAYON_HOME/distfiles:/usr/portage/distfiles"
	"-v $SABAYON_HOME/confs/entropy_arm.conf:/etc/entropy/repositories.conf.d/entropy_arm.conf"
        "-v $SABAYON_HOME/confs/entropysrv_sabayon-limbo:/etc/entropy/repositories.conf.d/entropysrv_sabayon-limbo"
        "-v $SABAYON_HOME/confs/entropysrv_sabayon-hell:/etc/entropy/repositories.conf.d/entropysrv_sabayon-hell"
        "-v $SABAYON_HOME/confs/entropysrv_sabayonlinux.org:/etc/entropy/repositories.conf.d/entropysrv_sabayonlinux.org"
	"-v $SABAYON_HOME/confs/entropy_server_conf_arm:/etc/entropy/server.conf"
	"-v $SABAYON_HOME/confs/distcc_hosts:/etc/distcc/hosts"
	"-v $SABAYON_HOME/artifacts:/usr/portage/packages"
	"-e FEATURES -e DISTCC_SSH -e DISTCC_HOSTS -e MAKEOPTS -e SSH_AUTH_SOCK"
)

export SABAYON_DOCKER_IMAGE
export SABAYON_CPUS
export SABAYON_MEMORY_RESERVATION
export SABAYON_MEMORY_SWAP
export SABAYON_MEMORY
export SABAYON_HOME
export SABAYON_DOCKER_OPTIONS
export SABAYON_COMMAND

. /sbin/sabayondocker-functions.sh

echo
echo "----> Printing image history, hang tight"
echo

echo "*****************************************"
docker history $SABAYON_DOCKER_IMAGE || exit 0
echo "*****************************************"

safety_check $SABAYON_DOCKER_IMAGE

spawn_container ${SABAYON_DOCKER_OPTIONS[@]}
